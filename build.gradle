//querydsl 추가
//buildscript {
//    ext {
//        queryDslVersion = "5.0.0"
//    }
//}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    //querydsl 추가
//    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group 'com.koliving'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly    'org.projectlombok:lombok:1.18.20'
    compileOnly    'jakarta.servlet:jakarta.servlet-api:5.0.0'
    runtimeOnly    'org.springframework.boot:spring-boot-starter-tomcat'
    runtimeOnly    'mysql:mysql-connector-java:8.0.22'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


// ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

test {
    useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}

